// MVC Controllers

// 原始语法
// let fn_hello = async (ctx, next) => {
//     ctx.response.type = 'text/html';
//     let name = ctx.request.query.name || 'world';
//     ctx.response.body = `<h1>Hello, ${name}!</h1>`;
// };

// module.exports = {
//     'GET /hello/:name': fn_hello
// };

// Nunjucks 模板方法
// let fn_index = async (ctx, next) => {
//     ctx.render('index.html', {N
//         title: 'Welcome'
//     });
// };

// module.exports = {
//     'GET /': fn_index
// };

/**
 * 异步读取文件
 * @param {*} url 
 */
function read(url) {
    return new Promise((resolve, reject) => {
        fs.readFile(url, 'utf-8', function (err, data) {
            if (err) return reject(err);
        })
    })
}

module.exports = {
    'GET /': async (ctx, next) => {
        let path = '../dist/index.html'
        // 构造解析 异步读取
        const { status, body } = await read(path);
        // 同步读取
        // body = fs.readFileSync(path, 'utf-8');
        ctx.state = status;
        ctx.type = 'text/html';
        ctx.body = body;

        // websocket demo
        // let user = ctx.state.user;
        // if (user) {
        //     ctx.render('roomVue.html', {
        //         user: user
        //     });
        // } else {
        //     ctx.response.redirect('/signin');
        // }

        // mysql demo
        // ctx.render('index.html');

        // rest demo
        // ctx.render('indexVue.html');
    }
};
